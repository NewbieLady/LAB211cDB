Consider the following code: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 public class MyClass { private int a; public double b; public MyClass(int first, double second) { this.a = first; this.b = second; } public static void main(String[] args) { MyClass c1 = new MyClass(10, 20.5); MyClass c2 = new MyClass(10, 31.5); System.out.println(c1.a + ", " + c1.b); } } What would this code print? Note that this might seem like a compiler error to be accessing c1.a and c1.b from main, but because the method main is defined in the class "MyClass", it will compile just fine (feel free to check it for yourself).|10, 20.5
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public class MyClass { private int a; public double b; public MyClass(int first, double second) { this.a = first; this.b = second; } public static void main(String[] args) { MyClass c1 = new MyClass(10, 20.5); MyClass c2 = new MyClass(10, 31.5); // lines below are changed from the question above c2 = c1; c1.a = 2; System.out.println(c2.a); } } What is the result of running the code above? Hint - draw a memory model!|2
In the code from question 2 above, after executing c2 = c1, how can you get back the object which c2 previously pointed to (the one with a as 10 and b as 31.5)?|You cannot get that object back
Please review the code below: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 public class MyClass { private int a; public double b; public MyClass(int first, double second) { this.a = first; this.b = second; } // new method public static void incrementBoth(MyClass c1) { c1.a = c1.a + 1; c1.b = c1.b + 1.0; } public static void main(String[] args) { MyClass c1 = new MyClass(10, 20.5); MyClass c2 = new MyClass(10, 31.5); // different code below incrementBoth(c2); System.out.println(c1.a + ", "+ c2.a); } } What would be the output from running main?|10, 11
Please review the code below: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 public class MyClass { private int a; public double b; public MyClass(int first, double second) { this.a = first; this.b = second; } public static void incrementBoth(MyClass c1) { c1.a = c1.a + 1; c1.b = c1.b + 1.0; } // new method public static void incrementA(int first) { first = first + 1; } // new method public static void incrementB(double second) { second = second + 1.0; } public static void main(String[] args) { MyClass c1 = new MyClass(10, 20.5); MyClass c2 = new MyClass(10, 31.5); // different code below incrementA(c2.a); incrementB(c2.b); System.out.println(c2.a + ", "+ c2.b); } } What is the output from running this code?|10, 31.5
